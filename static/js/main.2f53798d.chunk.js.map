{"version":3,"sources":["config.js","SearchForm.js","BookCard.js","BookFinder.js","App.js","index.js"],"names":["exports","GBOOK_KEY","process","SearchForm","props","onSubmit","handleSubmit","id","type","placeholder","onChange","handleInputUpdate","required","value","BookCard","className","volumeInfo","imageLinks","src","smallThumbnail","alt","title","authors","join","publisher","href","infoLink","target","rel","BookFinder","state","searchQuery","isLoading","searchExecuted","unknownErr","bookData","getBookDataFromAPI","e","preventDefault","setState","dataFound","API_URL","split","fetch","then","res","ok","json","alert","resj","items","catch","updateSearchQuery","q","Fragment","this","map","book","key","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"mJAAAA,EAAQC,UAAYC,2C,sQCGL,SAASC,EAAWC,GACjC,OACE,0BAAMC,SAAUD,EAAME,aAAcC,GAAG,eACrC,2BACEC,KAAK,OACLC,YAAY,uBACZC,SAAUN,EAAMO,kBAChBC,UAAQ,IAEV,2BAAOJ,KAAK,SAASK,MAAM,Y,MCTlB,SAASC,EAASV,GAC/B,OACE,yBAAKW,UAAU,aACZX,EAAMY,WAAWC,WAChB,yBACEC,IAAKd,EAAMY,WAAWC,WAAWE,eACjCC,IAAG,qCAAgChB,EAAMY,WAAWK,OACpDN,UAAU,eAGZ,yBAAKG,IAAI,GAAGE,IAAI,6BAA6BL,UAAU,eAEzD,yBAAKA,UAAU,aACb,uBAAGA,UAAU,cAAcX,EAAMY,WAAWK,OAC5C,uBAAGN,UAAU,eACVX,EAAMY,WAAWM,QAAjB,cACUlB,EAAMY,WAAWM,QAAQC,KAAK,OADxC,wBAIH,uBAAGR,UAAU,kBACVX,EAAMY,WAAWQ,UAAjB,wBACoBpB,EAAMY,WAAWQ,WADrC,qCAIH,uBACEC,KAAMrB,EAAMY,WAAWU,SACvBC,OAAO,SACPC,IAAI,uBAEJ,4BAAQb,UAAU,sBAAlB,oB,WCtBWc,E,2MACnBC,MAAQ,CACNC,YAAa,GACbC,WAAW,EACXC,gBAAgB,EAChBC,YAAY,EACZC,SAAU,I,EAGZC,mBAAqB,SAAAC,GACnBA,EAAEC,iBAGF,EAAKC,SAAS,CAAEP,WAAW,EAAMC,gBAAgB,EAAOO,WAAW,IAGnE,IAAIC,EACF,6DACOxC,YADP,0FAGK,EAAK6B,MAAMC,YAAYW,MAAM,KAAKnB,KAAK,MAE9CoB,MAAMF,GACHG,KAAK,SAAAC,GACJ,GAAKA,EAAIC,GAGP,OAAOD,EAAIE,OAFXC,MAAM,mDAKTJ,KAAK,SAAAK,GACJ,EAAKV,SAAS,CACZP,WAAW,EACXC,gBAAgB,EAChBE,SAAUc,EAAKC,UAGlBC,MAAM,kBACL,EAAKZ,SAAS,CACZN,gBAAgB,EAChBD,WAAW,EACXE,YAAY,O,EAKpBkB,kBAAoB,SAAAC,GAClB,EAAKd,SAAS,CACZR,YAAasB,K,wEAIP,IAAD,OACP,OACE,kBAAC,IAAMC,SAAP,KACE,2CACA,kBAAC,EAAD,CACE3C,kBAAmB,SAAA0B,GAAC,OAAI,EAAKe,kBAAkBf,EAAEV,OAAOd,QACxDP,aAAc,SAAA+B,GAAC,OAAI,EAAKD,mBAAmBC,MAE7C,yBAAK9B,GAAG,uBACLgD,KAAKzB,MAAME,WAAa,gDAExBuB,KAAKzB,MAAMG,gBACVsB,KAAKzB,MAAMK,UACXoB,KAAKzB,MAAMK,SAASqB,IAAI,SAAAC,GAAI,OAC1B,kBAAC,EAAD,CACEzC,WAAYyC,EAAKzC,WACjB0C,IAAG,sBAAiBD,EAAKzC,WAAWK,WAIzCkC,KAAKzB,MAAMG,iBAAmBsB,KAAKzB,MAAMK,UACxC,8EAGDoB,KAAKzB,MAAMG,gBAAkBsB,KAAKzB,MAAMI,YACvC,6E,GA7E4ByB,IAAMC,WCM/BC,MAVf,WACE,OACE,yBAAK9C,UAAU,OACb,yBAAKA,UAAU,YACb,kBAAC,EAAD,SCLR+C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2f53798d.chunk.js","sourcesContent":["exports.GBOOK_KEY = process.env.REACT_APP_GBOOK_API_KEY || \"NULL\";\n","import React from \"react\";\nimport \"./SearchForm.css\";\n\nexport default function SearchForm(props) {\n  return (\n    <form onSubmit={props.handleSubmit} id=\"book-search\">\n      <input\n        type=\"text\"\n        placeholder=\"Enter search term...\"\n        onChange={props.handleInputUpdate}\n        required\n      />\n      <input type=\"submit\" value=\"Search\" />\n    </form>\n  );\n}\n","import React from \"react\";\nimport \"./BookCard.css\";\n\nexport default function BookCard(props) {\n  return (\n    <div className=\"book-card\">\n      {props.volumeInfo.imageLinks ? (\n        <img\n          src={props.volumeInfo.imageLinks.smallThumbnail}\n          alt={`Google books thumbnail for ${props.volumeInfo.title}`}\n          className=\"book-image\"\n        />\n      ) : (\n        <img src=\"\" alt=\"No thumnail found for book\" className=\"book-image\" />\n      )}\n      <div className=\"book-info\">\n        <p className=\"book-title\">{props.volumeInfo.title}</p>\n        <p className=\"book-author\">\n          {props.volumeInfo.authors\n            ? `By: ${props.volumeInfo.authors.join(\", \")}`\n            : `By: No authors found`}\n        </p>\n        <p className=\"book-publisher\">\n          {props.volumeInfo.publisher\n            ? `Published By: ${props.volumeInfo.publisher}`\n            : `Published By: No publishers found`}\n        </p>\n        <a\n          href={props.volumeInfo.infoLink}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <button className=\"book-more-info-btn\">See this book</button>\n        </a>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./BookFinder.css\";\n\n// Components\nimport SearchForm from \"./SearchForm\";\nimport BookCard from \"./BookCard\";\n\n// Google Books API Key\nimport { GBOOK_KEY } from \"./config\";\n\nexport default class BookFinder extends React.Component {\n  state = {\n    searchQuery: \"\",\n    isLoading: false,\n    searchExecuted: false,\n    unknownErr: false,\n    bookData: []\n  };\n\n  getBookDataFromAPI = e => {\n    e.preventDefault();\n\n    // display loading page\n    this.setState({ isLoading: true, searchExecuted: false, dataFound: false });\n\n    // get search text string\n    let API_URL =\n      `https://www.googleapis.com/books/v1/volumes?` +\n      `key=${GBOOK_KEY}&` +\n      `fields=items(volumeInfo(title,authors,publisher,imageLinks,infoLink))&` +\n      `q=${this.state.searchQuery.split(\" \").join(\"+\")}`;\n\n    fetch(API_URL)\n      .then(res => {\n        if (!res.ok) {\n          alert(\"It looks like something went wrong! Try again\");\n        } else {\n          return res.json();\n        }\n      })\n      .then(resj => {\n        this.setState({\n          isLoading: false,\n          searchExecuted: true,\n          bookData: resj.items\n        });\n      })\n      .catch(() =>\n        this.setState({\n          searchExecuted: true,\n          isLoading: false,\n          unknownErr: true\n        })\n      );\n  };\n\n  updateSearchQuery = q => {\n    this.setState({\n      searchQuery: q\n    });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <h1>BOOK FINDER</h1>\n        <SearchForm\n          handleInputUpdate={e => this.updateSearchQuery(e.target.value)}\n          handleSubmit={e => this.getBookDataFromAPI(e)}\n        />\n        <div id=\"book-card-container\">\n          {this.state.isLoading && <h2>Finding books...</h2>}\n\n          {this.state.searchExecuted &&\n            this.state.bookData &&\n            this.state.bookData.map(book => (\n              <BookCard\n                volumeInfo={book.volumeInfo}\n                key={`book-result-${book.volumeInfo.title}`}\n              />\n            ))}\n\n          {this.state.searchExecuted && !this.state.bookData && (\n            <h2>No results found. Try a different search term!</h2>\n          )}\n\n          {this.state.searchExecuted && this.state.unknownErr && (\n            <h2>Something went wrong. Please try again.</h2>\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\n\n// Components\nimport BookFinder from \"./BookFinder\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"centered\">\n        <BookFinder />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}